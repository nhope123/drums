{"version":3,"sources":["drums.js","index.js"],"names":["fx1","qAudio","wAudio","eAudio","aAudio","sAudio","dAudio","zAudio","xAudio","cAudio","fx2","idList","Buttons","props","state","qSrc","wSrc","eSrc","aSrc","sSrc","dSrc","zSrc","xSrc","cSrc","loop","playAudio","bind","setTracks","muteAudio","setVolume","setLoop","event","element","document","getElementById","target","value","hasAttribute","setAttribute","currentTarget","classList","add","removeAttribute","remove","val","this","setState","map","item","load","volume","muted","eventValue","type","charCode","setDisplay","play","window","addEventListener","id","className","onClick","onKeyPress","src","React","Component","Volume","getVolume","passVolume","min","max","step","name","onChange","list","style","backgroundColor","color","Power","switchPower","checked","setMute","for","Fx","switching","setFx","Drums","trackTitle","buttonRef","createRef","current","buttonProps","class","aria-hidden","href","tabIndex","rel","title","ref","ReactDOM","render"],"mappings":"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","file":"static/js/main.de572d3e.chunk.js","sourcesContent":["import React from 'react';\nimport 'regenerator-runtime/runtime'\nimport './index.css';\n\n// First audio list\nconst fx1 = {\n  qAudio: ['./audio/Heater-1.mp3','Heater 1'],\n  wAudio: ['./audio/Heater-2.mp3','Heater 2'],\n  eAudio: ['./audio/Heater-3.mp3','Heater 3'],\n  aAudio: ['./audio/Heater-4_1.mp3','Heater 4'],\n  sAudio: ['./audio/Heater-6.mp3','Heater 6'],\n  dAudio: ['./audio/Dsc_Oh.mp3', 'Dsc Oh'],\n  zAudio: ['./audio/Kick_n_Hat.mp3','Kick n Hat'],\n  xAudio: ['./audio/Chord_2.mp3','Chord 2'],\n  cAudio: ['./audio/Chord_3.mp3','Chord 3']\n};\n// Second audio list\nconst fx2 = {\n  qAudio: ['./audio/TRACKER.mp3','Futuristic Ray'],\n  wAudio: ['./audio/TWINGY.mp3','Boing'],\n  eAudio: ['./audio/UPPER.mp3','Quick Whistle'],\n  aAudio: ['./audio/TINK.mp3','Quick Beep'],\n  sAudio: ['./audio/PLINK.mp3','Plink'],\n  dAudio: ['./audio/POP.mp3', 'Pop'],\n  zAudio: ['./audio/SWISH__1.mp3','Swish'],\n  xAudio: ['./audio/Give_us_a_light.mp3','Give us a light'],\n  cAudio: ['./audio/Chord_1.mp3','Chord 1']\n};\n// List of Button audio element ids\nconst idList = [\"qButton\",\"wButton\",\"eButton\",\n                \"aButton\",\"sButton\",\"dButton\",\n                \"zButton\",\"xButton\",\"cButton\"];\n\n// Drum machine Button Component emplimenting the button functionality\nclass Buttons extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n                qSrc: fx1.qAudio, wSrc: fx1.wAudio, eSrc: fx1.eAudio,\n                aSrc: fx1.aAudio, sSrc: fx1.sAudio, dSrc: fx1.dAudio,\n                zSrc: fx1.zAudio, xSrc: fx1.xAudio, cSrc: fx1.cAudio,\n                loop: false\n    };\n    this.playAudio = this.playAudio.bind(this);\n    this.setTracks = this.setTracks.bind(this);\n    this.muteAudio = this.muteAudio.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setLoop = this.setLoop.bind(this);\n  }\n  // Set the values for the audio elements loop attribute\n  setLoop(event){\n    var element = document.getElementById(event.target.value);\n    if (element.hasAttribute('loop') === false) {\n      element.setAttribute('loop','true');\n      event.currentTarget.classList.add('active-loop');\n    } else {\n      element.removeAttribute('loop');\n      event.currentTarget.classList.remove('active-loop');\n    }\n  }\n  // Set the values for the button tracks\n  setTracks(val){\n    this.setState({\n                    qSrc: val.qAudio, wSrc: val.wAudio, eSrc: val.eAudio,\n                    aSrc: val.aAudio, sSrc: val.sAudio, dSrc: val.dAudio,\n                    zSrc: val.zAudio, xSrc: val.xAudio, cSrc: val.cAudio\n    });\n    // Reload all audio buttons when new track are loaded\n    idList.map((item) => { document.getElementById(item).load(); return 1;});\n  }\n  // set the volume of all audio elements\n  setVolume(val){\n    // Set volumeof all audio elements to val\n    idList.map((item) => { document.getElementById(item).volume = val; return 1;});\n  }\n  // muteAudio function toogle the muted attribute for all audio elements\n  muteAudio(val){\n    if (val === true) {\n      idList.map((item) => {\n        document.getElementById(item).muted = true;\n        return 1;\n      });\n    } else {\n      idList.map((item) => {\n        document.getElementById(item).muted = false;\n        return 1;\n      });\n    }\n  }\n  // playAudio function plays selected audio and pass the track title for display\n  playAudio(event){\n    var eventValue; // Value from the button pressed\n    // Button selected by clicking\n    if (event.type === 'click') {\n      eventValue= event.target.value;\n    }\n    // Button selected by keyboard\n    if (event.type === 'keypress') {\n      switch (event.charCode) {\n        case 113:   // key Q\n          eventValue= idList[0];\n          break;\n        case 119:   // key W\n          eventValue=  idList[1] ;\n          break;\n        case 101:   // key E\n          eventValue= idList[2] ;\n          break;\n        case 97:    // key A\n          eventValue= idList[3] ;\n          break;\n        case 115:   // key S\n          eventValue= idList[4] ;\n          break;\n        case 100:   // key D\n          eventValue= idList[5] ;\n          break;\n        case 122:   // key Z\n          eventValue= idList[6] ;\n          break;\n        case 120:   // key X\n          eventValue= idList[7] ;\n          break;\n        case 99:   // key C\n          eventValue= idList[8];\n          break;\n        default:  // If other key press do nothing\n          eventValue='error';\n      }\n    }\n\n    // Assign track title text for display when track is played\n    if (eventValue !== 'error') {\n      switch (eventValue) {\n        case  idList[0] :\n          this.props.setDisplay(this.state.qSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        case  idList[1] :\n          this.props.setDisplay(this.state.wSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        case  idList[2] :\n          this.props.setDisplay(this.state.eSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        case idList[3] :\n          this.props.setDisplay(this.state.aSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        case idList[4] :\n          this.props.setDisplay(this.state.sSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        case idList[5] :\n          this.props.setDisplay(this.state.dSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        case idList[6] :\n          this.props.setDisplay(this.state.zSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        case idList[7] :\n          this.props.setDisplay(this.state.xSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        case idList[8]:\n          this.props.setDisplay(this.state.cSrc[1]);\n          document.getElementById(eventValue).play();\n          break;\n        default:\n          break;\n      }\n       // Play audio for that button\n    }\n  }\n  render(){\n    window.addEventListener('keypress', this.playAudio);\n\n    return(\n      <section id='drum_buttoms'>\n        {/* Row 1 with button Q W E */}\n        <div id='qCon'>\n          {/* Q button */}\n          <button type='button' className='drum-pad'  onClick={this.playAudio} value={ idList[0] }  onKeyPress={this.playAudio}>\n            <audio  id={ idList[0] } >\n            {/* // BUG: fix source */}\n              <source src={this.state.qSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n            Q\n          </button>\n          <button type='button' className='left loop' onClick={this.setLoop} value={ idList[0] } >loop </button>\n        </div>\n        <div id='wCon'>\n          {/* W button */}\n          <button type='button'  className='drum-pad'  onClick={this.playAudio} value={idList[1]} >\n            <audio  id={idList[1]}   >\n              <source src={this.state.wSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n            W\n          </button >\n          <button type='button' className='center loop' onClick={this.setLoop} value={idList[1]} >loop </button>\n        </div>\n        <div id='eCon'>\n          {/* E button */}\n          <button type='button' className='drum-pad'  onClick={this.playAudio} value={idList[2] }>\n            <audio  id={idList[2] }>\n              <source src={this.state.eSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n            E\n          </button >\n          <button type='button' className='right loop' onClick={this.setLoop} value={idList[2] } >loop </button>\n        </div>\n        {/* Row 2 with button A S D */}\n        <div id='aCon'>\n          {/* A button */}\n          <button type='button' className='drum-pad'  onClick={this.playAudio} value={idList[3] }>\n            <audio  id={idList[3] } >\n              <source src={this.state.aSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n            A\n          </button >\n          <button type='button' className='left loop' onClick={this.setLoop} value={idList[3] } >loop </button>\n        </div>\n        <div id='sCon'>\n          {/* S button */}\n          <button type='button' className='drum-pad'  onClick={this.playAudio} value={idList[4] }>\n            <audio  id={idList[4] }>\n              <source src={this.state.sSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n            S\n          </button >\n          <button type='button' className='center loop' onClick={this.setLoop} value={idList[4] } >loop </button>\n        </div>\n        <div id='dCon'>\n          {/* D button */}\n          <button type='button' className='drum-pad'  onClick={this.playAudio} value={ idList[5] } >\n            <audio  id={ idList[5] } >\n              <source src={this.state.dSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n            D\n          </button >\n          <button type='button' className='right loop' onClick={this.setLoop} value={ idList[5] } >loop </button>\n        </div>\n        {/* Row 2 with button Z X C */}\n        <div id='zCon'>\n          {/* Z button */}\n          <button type='button' className='drum-pad'  onClick={this.playAudio} value={ idList[6] } >\n            <audio  id={ idList[6] } >\n              <source src={this.state.zSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n            Z\n          </button >\n          <button type='button' className='left loop' onClick={this.setLoop}  value={ idList[6] } >loop </button>\n        </div>\n        <div id='xCon'>\n          {/* X button */}\n          <button type='button'  className='drum-pad'  onClick={this.playAudio} value={ idList[7] }>\n            <audio  id={ idList[7] }>\n              <source src={this.state.xSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n            X\n          </button >\n          <button type='button' className='center loop' onClick={this.setLoop}  value={ idList[7] } >loop </button>\n        </div>\n        <div id='cCon'>\n          {/* C button */}\n          <button type='button' className='drum-pad'  onClick={this.playAudio} value={ idList[8] }>\n            <audio  id={ idList[8] }>\n              <source src={this.state.cSrc[0]} type='audio/mp3' />\n              Your browser does not support the audio element.\n            </audio>\n          C\n          </button >\n          <button type='button' className='right loop' onClick={this.setLoop} value={ idList[8] } >loop </button>\n        </div>\n      </section>\n    );\n  }\n\n}\n// Volume slider with functionality\nclass Volume extends React.Component{\n  constructor(props){\n    super(props);\n    this.getVolume = this.getVolume.bind(this);\n  }\n  // Collect volume value from slider\n  getVolume(event){\n    this.props.passVolume(event.target.value);\n  }\n  render(){\n    return(\n      <div id='volume'>\n        <input type='range' min='0' max='1.0' step='0.1' name='scale' onChange={this.getVolume} list='levels' style={{\n          backgroundColor: 'red', color: 'black'\n        }}/>\n        <datalist id='levels'>\n          <option value='0' />\n          <option value='0.5' />\n          <option value='1' />\n        </datalist>\n        <div id='vText'>Volume</div>\n      </div>\n    );\n  }\n}\n// Power toggle switch for audio activation and deactivation\nclass Power extends React.Component{\n  constructor(props){\n    super(props);\n    this.switchPower = this.switchPower.bind(this);\n  }\n  // Toogle the mute switch on/off\n  switchPower(){\n    var powerChoice = document.getElementById('mute');\n      // Power switch is checked mute all audio\n      if (powerChoice.checked) { this.props.setMute(false); }\n      // Power switch unchecked unmute all audio\n      else{ this.props.setMute(true); }\n  }\n  render(){\n    return(\n      <div id='power'>\n        <label className='switch' for='mute' >\n          <input type='checkbox' id='mute'/>\n          <span className='slider round' onClick={this.switchPower} ></span>\n        </label>\n        <div> Power</div>\n      </div>\n    );\n  }\n}\n// Select type of audio\nclass Fx extends React.Component{\n  constructor(props){\n    super(props);\n    this.switching = this.switching.bind(this);\n  }\n  // Toogle the Audio track list\n  switching(){\n    var fxChoice = document.getElementById('fxSwitch');\n      // FX switch is checked load first sound list\n      if (fxChoice.checked) { this.props.setFx(fx1); }\n      // FX switch is unchecked load second sound list\n      else{ this.props.setFx(fx2); }\n  }\n  render(){\n    return(\n      <div id='fx'>\n        <label for='fxSwitch' className='switch'  >\n          <input type='checkbox' id='fxSwitch'  />\n          <span className='slider round on' onClick={this.switching}>On</span>\n          {/* <span className='slider round off'>Off</span> */}\n        </label>\n        <div> Fx</div>\n      </div>\n    );\n  }\n}\n\nexport class Drums extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n                trackTitle:''\n              };\n    this.setDisplay = this.setDisplay.bind(this);\n    this.setFx = this.setFx.bind(this);\n    this.setMute = this.setMute.bind(this);\n    this.passVolume = this.passVolume.bind(this);\n    this.buttonRef = React.createRef();\n  }\n  // Sets tack title display value\n  setDisplay(val){\n    this.setState({trackTitle: val}); // this.props.title\n  }\n  // Sets the batch of sound to be played\n  setFx(val){\n    this.buttonRef.current.setTracks(val); // Passing track value to Button Component\n  }\n  // Set the muted value for all audio elements\n  setMute(val){\n    this.buttonRef.current.muteAudio(val); // Passing mute value to Button Component\n  }\n  passVolume(val){\n    this.buttonRef.current.setVolume(val);\n  }\n\n  render(){\n    //console.log(this.state.fxBatch);\n    var buttonProps = {setDisplay: this.setDisplay };\n    return(\n      <div className=\"player-container\">{/* Container with player elements */}\n        <div id='logo'>{/* Header with logo */}\n          <i class=\"fa fa-grav\" aria-hidden=\"true\"></i>\n          <a href='https://github.com/nhope123/drums' tabIndex='0' target='_blank' rel=\"noopener noreferrer\" title='Github Repository'>eFonic</a>\n        </div>\n        <div id='display'>{this.state.trackTitle}</div> {/* Audio description Display */}\n        <Buttons {...buttonProps} ref={this.buttonRef}/> {/* Button Component emplimenting the button functionality */}\n        <Volume passVolume={this.passVolume} />{/* Volume slider with functionality */}\n        <div id='switches' >\n          <Power setMute={this.setMute}/>{/* Power toggle switch for audio activation and deactivation */ }\n          <Fx setFx={this.setFx}/> {/* Select type of audio */}\n        </div>\n      </div>);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as drums from './drums.js';\n\nReactDOM.render(\n  <drums.Drums/>,\n  document.getElementById('drum-machine')\n);\n"],"sourceRoot":""}