{"version":3,"sources":["audio/Heater-1.mp3","audio/Heater-2.mp3","audio/Heater-3.mp3","audio/Heater-4_1.mp3","audio/Heater-6.mp3","audio/Dsc_Oh.mp3","audio/Kick_n_Hat.mp3","audio/Chord_2.mp3","audio/Chord_3.mp3","audio/TRACKER.mp3","audio/TWINGY.mp3","audio/UPPER.mp3","audio/TINK.mp3","audio/PLINK.mp3","audio/POP.mp3","audio/SWISH__1.mp3","audio/Give_us_a_light.mp3","audio/Chord_1.mp3","drums.js","index.js"],"names":["module","exports","fx1","qAudio","heat1","wAudio","heat2","eAudio","heat3","aAudio","heat4","sAudio","heat6","dAudio","dsc","zAudio","kick","xAudio","chor2","cAudio","chor3","fx2","ray","boing","quikW","beep","plink","pop","swish","light","chor1","idList","Button","id","this","props","containerId","buttonId","type","className","onClick","audio","playAudio","value","audioId","onKeyPress","src","audioSrc","setLoop","React","Component","ButtonPad","state","qSrc","wSrc","eSrc","aSrc","sSrc","dSrc","zSrc","xSrc","cSrc","loop","bind","setTracks","muteAudio","setVolume","event","element","document","getElementById","target","hasAttribute","setAttribute","currentTarget","classList","add","removeAttribute","remove","val","setState","map","item","load","volume","muted","eventValue","charCode","runPlay","setDisplay","audioElement","pause","currentTime","playPromise","play","undefined","then","_","console","log","catch","err","window","addEventListener","displayValue","Volume","getVolume","passVolume","min","max","step","name","onChange","list","style","backgroundColor","color","Power","switchPower","checked","setMute","htmlFor","Fx","switching","setFx","Drums","trackTitle","buttonRef","createRef","current","buttonProps","aria-hidden","href","tabIndex","rel","title","ref","ReactDOM","render"],"mappings":"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","file":"static/js/main.3eb34dfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Heater-1.b1cfea05.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-2.0d219666.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-3.632e8772.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-4_1.d9de8a50.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-6.3062daca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Dsc_Oh.5c9f8087.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Kick_n_Hat.200b4bd3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_2.3946f9fe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_3.074c0a82.mp3\";","module.exports = __webpack_public_path__ + \"static/media/TRACKER.c8717328.mp3\";","module.exports = __webpack_public_path__ + \"static/media/TWINGY.cd77b0e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/UPPER.37496483.mp3\";","module.exports = __webpack_public_path__ + \"static/media/TINK.c48888df.mp3\";","module.exports = __webpack_public_path__ + \"static/media/PLINK.cedba090.mp3\";","module.exports = __webpack_public_path__ + \"static/media/POP.d4e22e72.mp3\";","module.exports = __webpack_public_path__ + \"static/media/SWISH__1.d1c4e95b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Give_us_a_light.561c9a54.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_1.d8544f3e.mp3\";","import React from 'react';\nimport 'regenerator-runtime/runtime'\nimport './index.css';\n// Audio Import\nimport heat1 from './audio/Heater-1.mp3';\nimport heat2 from './audio/Heater-2.mp3';\nimport heat3 from './audio/Heater-3.mp3';\nimport heat4 from './audio/Heater-4_1.mp3';\nimport heat6 from './audio/Heater-6.mp3';\nimport dsc   from './audio/Dsc_Oh.mp3';\nimport kick  from './audio/Kick_n_Hat.mp3';\nimport chor2 from './audio/Chord_2.mp3';\nimport chor3 from './audio/Chord_3.mp3';\n\nimport ray   from './audio/TRACKER.mp3';\nimport boing from './audio/TWINGY.mp3';\nimport quikW from './audio/UPPER.mp3';\nimport beep  from './audio/TINK.mp3';\nimport plink from './audio/PLINK.mp3';\nimport pop   from './audio/POP.mp3';\nimport swish from './audio/SWISH__1.mp3';\nimport light from './audio/Give_us_a_light.mp3';\nimport chor1 from './audio/Chord_1.mp3';\n\n// First audio list\nlet fx1 = {\n  qAudio: [ heat1,'Fine Q'],\n  wAudio: [ heat2,'Skat'],\n  eAudio: [ heat3,'Pley'],\n  aAudio: [ heat4,'Pring'],\n  sAudio: [ heat6,'Splack'],\n  dAudio: [ dsc, 'Dsc Oh'],\n  zAudio: [ kick,'Kick n Hat'],\n  xAudio: [ chor2,'X-bate'],\n  cAudio: [ chor3,' C Chord']\n};\n// Second audio list\nlet fx2 = {\n  qAudio: [ ray,'Futuristic Ray'],\n  wAudio: [ boing,'Boing'],\n  eAudio: [ quikW,'Quick Whistle'],\n  aAudio: [ beep,'Quick Beep'],\n  sAudio: [ plink,'Plink'],\n  dAudio: [ pop, 'Pop'],\n  zAudio: [ swish,'Swish'],\n  xAudio: [ light,'Give us a light'],\n  cAudio: [ chor1,'End Chord ']\n};\n// List of Button audio element ids\nlet idList = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n\n// Button component implimenting all drum button functions\nclass Button extends React.Component{\n\n  render(){\n    //var theSrc = this.props.audioSrc;\n    return(\n      <div id={this.props.containerId}>\n        {/*  button */}\n        <button id={this.props.buttonId} type='button' className='drum-pad'  onClick={this.props.audio.playAudio} value={ this.props.audioId }  onKeyPress={this.props.audio.playAudio}>\n          <audio  src={ this.props.audioSrc}  id={ this.props.audioId } className='clip' type={\"audio/basic\"} ></audio>\n           {this.props.audioId }\n        </button>\n        <button type='button' className='left loop' onClick={this.props.audio.setLoop} value={ this.props.audioId } >loop </button>\n      </div>\n    );\n  }\n}\n// Drum machine Button Component emplimenting the button functionality\nclass ButtonPad extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n                qSrc: fx1.qAudio, wSrc: fx1.wAudio, eSrc: fx1.eAudio,\n                aSrc: fx1.aAudio, sSrc: fx1.sAudio, dSrc: fx1.dAudio,\n                zSrc: fx1.zAudio, xSrc: fx1.xAudio, cSrc: fx1.cAudio,\n                loop: false\n    };\n    this.playAudio = this.playAudio.bind(this);\n    this.setTracks = this.setTracks.bind(this);\n    this.muteAudio = this.muteAudio.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setLoop = this.setLoop.bind(this);\n  }\n  // Set the values for the audio elements loop attribute\n  setLoop(event){\n    var element = document.getElementById(event.target.value);\n    if (element.hasAttribute('loop') === false) {\n      element.setAttribute('loop','true');\n      event.currentTarget.classList.add('active-loop');\n    } else {\n      element.removeAttribute('loop');\n      event.currentTarget.classList.remove('active-loop');\n    }\n  }\n  // Set the values for the button tracks\n  setTracks(val){\n    this.setState({\n                    qSrc: val.qAudio, wSrc: val.wAudio, eSrc: val.eAudio,\n                    aSrc: val.aAudio, sSrc: val.sAudio, dSrc: val.dAudio,\n                    zSrc: val.zAudio, xSrc: val.xAudio, cSrc: val.cAudio\n    });\n    // Reload all audio buttons when new track are loaded\n  idList.map((item) => { document.getElementById(item).load(); return 1;});\n  }\n  // set the volume of all audio elements\n  setVolume(val){\n    // Set volumeof all audio elements to val\n    idList.map((item) => { document.getElementById(item).volume = val; return 1;});\n  }\n  // muteAudio function toogle the muted attribute for all audio elements\n  muteAudio(val){\n    if (val === true) {\n      idList.map((item) => {\n        document.getElementById(item).muted = true;\n        return 1;\n      });\n    } else {\n      idList.map((item) => {\n        document.getElementById(item).muted = false;\n        return 1;\n      });\n    }\n  }\n  // playAudio function plays selected audio and pass the track title for display\n  playAudio(event){\n    var eventValue; // Value from the button pressed\n    // Button selected by clicking\n    if (event.type === 'click') {\n      eventValue= event.target.value;\n    }\n    // Button selected by keyboard\n    if (event.type === 'keypress') {\n      switch (event.charCode) {\n        case 113 || 81:   // key Q\n          eventValue= idList[0];\n          break;\n        case 119 || 87:   // key W\n          eventValue=  idList[1] ;\n          break;\n        case 101 || 69:   // key E\n          eventValue= idList[2] ;\n          break;\n        case 97 || 65:    // key A\n          eventValue= idList[3] ;\n          break;\n        case 115 || 83:   // key S\n          eventValue= idList[4] ;\n          break;\n        case 100 || 68:   // key D\n          eventValue= idList[5] ;\n          break;\n        case 122 || 90:   // key Z\n          eventValue= idList[6] ;\n          break;\n        case 120 || 88:   // key X\n          eventValue= idList[7] ;\n          break;\n        case 99 || 67:   // key C\n          eventValue= idList[8];\n          break;\n        default:  // If other key press do nothing\n          eventValue='error';\n      }\n    }\n\n    // Assign track title text for display when track is played\n    if (eventValue !== 'error') {\n      switch (eventValue) {\n        case  idList[0] :\n          this.runPlay(this.state.qSrc[1], eventValue);\n          /* this.props.setDisplay(this.state.qSrc[1]);\n          document.getElementById(eventValue).play(); */\n          break;\n        case  idList[1] :\n          this.runPlay(this.state.wSrc[1], eventValue);\n          /* this.props.setDisplay(this.state.wSrc[1]);\n          document.getElementById(eventValue).play(); */\n          break;\n        case  idList[2] :\n          this.runPlay(this.state.eSrc[1], eventValue);\n          /* this.props.setDisplay(this.state.eSrc[1]);\n          document.getElementById(eventValue).play */\n          break;\n        case idList[3] :\n          this.runPlay(this.state.aSrc[1], eventValue);\n          /* this.props.setDisplay(this.state.aSrc[1]);\n          document.getElementById(eventValue).play(); */\n          break;\n        case idList[4] :\n          this.runPlay(this.state.sSrc[1], eventValue);\n          /* this.props.setDisplay(this.state.sSrc[1]);\n          document.getElementById(eventValue).play(); */\n          break;\n        case idList[5] :\n          this.runPlay(this.state.dSrc[1], eventValue);\n          /* this.props.setDisplay(this.state.dSrc[1]);\n          document.getElementById(eventValue).play(); */\n          break;\n        case idList[6] :\n          this.runPlay(this.state.zSrc[1], eventValue);\n          /* this.props.setDisplay(this.state.zSrc[1]);\n          document.getElementById(eventValue).play(); */\n          break;\n        case idList[7] :\n          this.runPlay(this.state.xSrc[1], eventValue);\n          /* this.props.setDisplay(this.state.xSrc[1]);\n          document.getElementById(eventValue).play(); */\n          break;\n        case idList[8] :\n          this.runPlay(this.state.cSrc[1], eventValue);\n          //this.props.setDisplay(this.state.cSrc[1]);\n          //document.getElementById(eventValue).play(); */\n          break;\n        default:\n          break;\n      }\n       // Play audio for that button\n    }\n  }\n  runPlay( state, id){\n      this.props.setDisplay(state);\n      var audioElement =  document.getElementById(id);\n    //  audioElement.onplaying = function(){\n        audioElement.pause();\n        audioElement.currentTime = 0;\n    //  }\n      var playPromise =audioElement.play();\n      if (playPromise !== undefined) {\n        playPromise.then(_ => {\n          console.log(id);\n        }).catch(err => {console.log(err);});\n      }\n  }\n  render(){\n    window.addEventListener('keypress', this.playAudio);\n    let audio = {\n      playAudio: this.playAudio,\n      setLoop: this.setLoop\n    };\n    return(\n      <section id='drum_buttoms'>\n        {/* button props list\n                              audioId: idList[0] (the value changes for each button\n                              displayValue: val (button letters)\n                              audioSrc: this.state.qSrc[0] (the sorce for each audio button)\n                              containerId: 'qCon' (id for each button container)\n                               buttonId: 'buttonQ' (unique button id)\n        */}\n        {/* Row 1 with button Q W E */}\n        <Button {...{audio}} audioId={ idList[0]} displayValue={ 'Q' } audioSrc={ this.state.qSrc[0]} containerId={'qCon'} buttonId={'buttonQ'}/>\n        <Button {...{audio}} audioId={ idList[1]} displayValue={ 'W' } audioSrc={ this.state.wSrc[0]} containerId={'wCon'} buttonId={'buttonW'}/>\n        <Button {...{audio}} audioId={ idList[2]} displayValue={ 'E' } audioSrc={ this.state.eSrc[0]} containerId={'eCon'} buttonId={'buttonE'}/>\n        {/* Row 2 with button A S D  */}\n        <Button {...{audio}} audioId={ idList[3]} displayValue={ 'A' } audioSrc={ this.state.aSrc[0]} containerId={'aCon'} buttonId={'buttonA'}/>\n        <Button {...{audio}} audioId={ idList[4]} displayValue={ 'S' } audioSrc={ this.state.sSrc[0]} containerId={'sCon'} buttonId={'buttonS'}/>\n        <Button {...{audio}} audioId={ idList[5]} displayValue={ 'D' } audioSrc={ this.state.dSrc[0]} containerId={'dCon'} buttonId={'buttonD'}/>\n        {/* Row 3 with button Z X C */}\n        <Button {...{audio}} audioId={ idList[6]} displayValue={ 'Z' } audioSrc={ this.state.zSrc[0]} containerId={'zCon'} buttonId={'buttonZ'}/>\n        <Button {...{audio}} audioId={ idList[7]} displayValue={ 'X' } audioSrc={ this.state.xSrc[0]} containerId={'xCon'} buttonId={'buttonX'}/>\n        <Button {...{audio}} audioId={ idList[8]} displayValue={ 'C' } audioSrc={ this.state.cSrc[0]} containerId={'cCon'} buttonId={'buttonC'}/>\n\n      </section>\n    );\n  }\n\n}\n// Volume slider with functionality\nclass Volume extends React.Component{\n  constructor(props){\n    super(props);\n    this.getVolume = this.getVolume.bind(this);\n  }\n  // Collect volume value from slider\n  getVolume(event){\n    this.props.passVolume(event.target.value);\n  }\n  render(){\n    return(\n      <div id='volume'>\n        <input type='range' min='0' max='1.0' step='0.1' name='scale' onChange={this.getVolume} list='levels' style={{\n          backgroundColor: 'red', color: 'black'\n        }}/>\n        <datalist id='levels'>\n          <option value='0' />\n          <option value='0.5' />\n          <option value='1' />\n        </datalist>\n        <div id='vText'>Volume</div>\n      </div>\n    );\n  }\n}\n// Power toggle switch for audio activation and deactivation\nclass Power extends React.Component{\n  constructor(props){\n    super(props);\n    this.switchPower = this.switchPower.bind(this);\n  }\n  // Toogle the mute switch on/off\n  switchPower(event){\n    var powerChoice = document.getElementById('mute');\n      // Power switch is checked mute all audio\n      if (powerChoice.checked) {\n        this.props.setMute(false);\n      }\n      // Power switch unchecked unmute all audio\n      else{ this.props.setMute(true); }\n  }\n  render(){\n    return(\n      <div id='power'>\n        <label className='switch' htmlFor='mute' >\n          <input type='checkbox' id='mute'/>\n          <span className='slider round' onClick={this.switchPower} ></span>\n        </label>\n        <div> Mute</div>\n      </div>\n    );\n  }\n}\n// Select type of audio\nclass Fx extends React.Component{\n  constructor(props){\n    super(props);\n    this.switching = this.switching.bind(this);\n  }\n  // Toogle the Audio track list\n  switching(){\n    var fxChoice = document.getElementById('fxSwitch');\n      // FX switch is checked load first sound list\n      if (fxChoice.checked) { this.props.setFx(fx1); }\n      // FX switch is unchecked load second sound list\n      else{ this.props.setFx(fx2); }\n  }\n  render(){\n    return(\n      <div id='fx'>\n        <label htmlFor='fxSwitch' className='switch'  >\n          <input type='checkbox' id='fxSwitch'  />\n          <span className='slider round on' onClick={this.switching}>On</span>\n          {/* <span className='slider round off'>Off</span> */}\n        </label>\n        <div> Fx</div>\n      </div>\n    );\n  }\n}\n\nexport class Drums extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n                trackTitle:''\n              };\n    this.setDisplay = this.setDisplay.bind(this);\n    this.setFx = this.setFx.bind(this);\n    this.setMute = this.setMute.bind(this);\n    this.passVolume = this.passVolume.bind(this);\n    this.buttonRef = React.createRef();\n  }\n  // Sets tack title display value\n  setDisplay(val){\n    this.setState(()=>{return{trackTitle: val}}); // this.props.title\n  }\n  // Sets the batch of sound to be played\n  setFx(val){\n    this.buttonRef.current.setTracks(val); // Passing track value to Button Component\n  }\n  // Set the muted value for all audio elements\n  setMute(val){\n    this.buttonRef.current.muteAudio(val); // Passing mute value to Button Component\n  }\n  passVolume(val){\n    this.buttonRef.current.setVolume(val);\n  }\n\n  render(){\n    //console.log(this.state.fxBatch);\n    var buttonProps = {setDisplay: this.setDisplay };\n    return(\n      <div className=\"player-container\">{/* Container with player elements */}\n        <div id='logo'>{/* Header with logo */}\n          <i className=\"fa fa-grav\" aria-hidden=\"true\"></i>\n          <a href='https://github.com/nhope123/drums' tabIndex='0' target='_blank' rel=\"noopener noreferrer\" title='Github Repository'>eFonic</a>\n        </div>\n        <div id='display'>{this.state.trackTitle}</div> {/* Audio description Display */}\n        <ButtonPad {...buttonProps} ref={this.buttonRef}/> {/* Button Component emplimenting the button functionality */}\n        <Volume passVolume={this.passVolume} />{/* Volume slider with functionality */}\n        <div id='switches' >\n          <Power setMute={this.setMute}/>{/* Power toggle switch for audio activation and deactivation */ }\n          <Fx setFx={this.setFx}/> {/* Select type of audio */}\n        </div>\n      </div>);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as drums from './drums.js';\n\nReactDOM.render(\n  <drums.Drums/>,\n  document.getElementById('drum-machine')\n);\n"],"sourceRoot":""}